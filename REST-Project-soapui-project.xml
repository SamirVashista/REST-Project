<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="06d89293-8720-4fe0-92b5-ada8cebc47e8" activeEnvironment="Default" name="REST Project" resourceRoot="" soapui-version="5.5.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="ce7a35bd-19e9-496e-b034-d9bedb0e139f" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Client_credentials" path="/api/rest_admin/oauth2/token/client_credentials" id="23d5a3a7-05d3-4e9c-bee0-70b7c2f869da"><con:settings/><con:parameters/><con:method name="Client_credentials 1" id="3535d5f3-dbac-40b8-8df7-9e06a76fcc31" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>405 400</con:status><con:params/><con:element xmlns:cli="http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials">cli:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:cli="http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials">cli:Response</con:element></con:representation><con:request name="Token" id="f5e6ac00-f816-48f2-9de8-42b1bb4a4653" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization " value="${#Project#Author}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="3b2d5817-9461-4c07-8a9a-b108586a24e0" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Login" path="/api/rest_admin/login" id="c8564aa7-b3fe-4228-9f73-5617e6579f34"><con:settings/><con:parameters/><con:method name="Login 1" id="fcd36d0c-3615-4fac-ab37-99b7ee9597ea" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401 400</con:status><con:params/><con:element xmlns:log="http://rest-api.upskills.in/api/rest_admin/login">log:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:log="http://rest-api.upskills.in/api/rest_admin/login">log:Response</con:element></con:representation><con:request name="Log In" id="a914d3fa-1609-481a-a2ff-bf1d293378fb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
  "username": "upskills_admin",
  "password": "Talent4$$"
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/login</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="8ef761b8-8937-4fbd-9e3c-ba0bcde9def9" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Logout" path="/api/rest_admin/logout" id="ba6c7b2c-798f-4a9a-819b-bf485d41fff3"><con:settings/><con:parameters/><con:method name="Logout 1" id="726d6408-926f-401a-824d-769b25028212" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>405</con:status><con:params/><con:element xmlns:log="http://rest-api.upskills.in/api/rest_admin/logout">log:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:log="http://rest-api.upskills.in/api/rest_admin/logout">log:Response</con:element></con:representation><con:request name="Log Out" id="e17ecc30-ca7a-4804-9be7-f3af1ae7d970" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/logout</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="fadc206a-7e1f-48c8-823f-7a9789f43dbf" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Products" path="/api/rest_admin/products" id="2aee0434-53b2-432c-838c-335a5a7e0e02"><con:settings/><con:parameters/><con:method name="Products 1" id="81b1f48f-40b5-43b3-9ec3-cec0b2e60bdf" method="POST"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>403 400</con:status><con:params/><con:element xmlns:prod="http://rest-api.upskills.in/api/rest_admin/products">prod:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:prod="http://rest-api.upskills.in/api/rest_admin/products">prod:Response</con:element></con:representation><con:request name="Add Product" id="d1f22e76-72b1-44e8-911c-51d961d2c2f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
  "model": "demo model",
  "quantity": "300",
  "price": "44.00",
  "tax_class_id": "1",
  "manufacturer_id": "20",
  "sku": "demo sku",
  "product_seo_url": [
    {
      "keyword": "dem",
      "language_id": "1",
      "store_id": "0"
    }
  ],
  "status": "1",
  "points": 0,
  "reward": 0,
  "image": "",
  "other_images": [
    ""
  ],
  "shipping": "1",
  "stock_status_id": 0,
  "upc": "",
  "ean": "",
  "jan": "",
  "isbn": "",
  "mpn": "",
  "location": "",
  "date_available": "2017-05-12",
  "weight": 0,
  "weight_class_id": 0,
  "length": 0,
  "width": 0,
  "height": 0,
  "length_class_id": 0,
  "subtract": 0,
  "minimum": 0,
  "sort_order": "",
  "product_store": [
    "0"
  ],
  "product_related": [
    "34"
  ],
  "product_filter": [
    "34"
  ],
  "product_description": [
    {
      "language_id": "1",
      "name": "demo name",
      "description": "Description of the product",
      "meta_title": "Meta title of the product",
      "meta_description": "Meta description of the product",
      "meta_keyword": "demo, keyword, demo2",
      "tag": "Product's tag, comma separeted"
    }
  ],
  "product_category": [
    "25"
  ],
  "product_special": [
    {
      "customer_group_id": "1",
      "price": "200",
      "priority": "1",
      "date_start": "2015-02-23",
      "date_end": "2019-02-23"
    }
  ],
  "product_discount": [
    {
      "name": "demo name",
      "customer_group_id": "1",
      "price": "200",
      "priority": "1",
      "quantity": "1",
      "date_start": "2015-02-23",
      "date_end": "2019-02-23"
    }
  ],
  "product_attribute": [
    {
      "attribute_id": "16",
      "product_attribute_description": [
        {
          "text": "demo name",
          "language_id": "1"
        }
      ]
    }
  ],
  "product_option": [
    {
      "type": "radio",
      "option_id": "11",
      "required": "1",
      "product_option_value": [
        {
          "price": "10.00",
          "price_prefix": "+",
          "subtract": "1",
          "points": "0",
          "points_prefix": "+",
          "weight": "0",
          "weight_prefix": "+",
          "option_value_id": "46",
          "quantity": "0"
        }
      ]
    }
  ]
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/products</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="9218d705-46f7-4d1b-9fd9-90f62c587341" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Index.php" path="/index.php" id="f0db4a74-41ab-4beb-8355-0ba756e5c62c"><con:settings/><con:parameters><con:parameter><con:name>route</con:name><con:value>rest/product_admin/products</con:value><con:style>QUERY</con:style><con:default>rest/product_admin/products</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>id</con:name><con:value>{633}</con:value><con:style>QUERY</con:style><con:default>{633}</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Index.php 1" id="f93b1871-4454-4cbd-b9aa-376cf7b9d7a5" method="GET"><con:settings/><con:parameters/><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>401</con:status><con:params/><con:element xmlns:ind="http://rest-api.upskills.in/index.php">ind:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ind="http://rest-api.upskills.in/index.php">ind:Response</con:element></con:representation><con:request name="Product ID" id="e1887b66-358d-47c7-a99a-e1c2ced06c7a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/index.php</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><entry key="id" value="${#Project#id}" xmlns="http://eviware.com/soapui/config"/></con:parameters><con:parameterOrder><con:entry>route</con:entry><con:entry>id</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="eeae3dc7-6798-4c04-b9c1-2dbb6e6648eb" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Bulk_products" path="/api/rest_admin/bulk_products" id="5eea88b5-6b0a-43c9-aac5-02511e5bf11b"><con:settings/><con:parameters/><con:method name="Bulk_products 1" id="eabe9f9a-3552-4d5b-ae0f-2a690a074b94" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 401</con:status><con:params/><con:element xmlns:bulk="http://rest-api.upskills.in/api/rest_admin/bulk_products">bulk:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:bulk="http://rest-api.upskills.in/api/rest_admin/bulk_products">bulk:Response</con:element></con:representation><con:request name="Multiple Project" id="6f6b1f58-b114-42ca-b1a1-ce01ddc410a2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>[
  {
    "model": "demo model",
    "quantity": "300",
    "price": "44.00",
    "tax_class_id": "1",
    "manufacturer_id": "20",
    "sku": "demo sku",
    "product_seo_url": [
      {
        "keyword": "dev",
        "language_id": "1",
        "store_id": "0"
      }
    ],
    "status": "1",
    "points": 0,
    "reward": 0,
    "image": "",
    "other_images": [
      ""
    ],
    "shipping": "1",
    "stock_status_id": 0,
    "upc": "",
    "ean": "",
    "jan": "",
    "isbn": "",
    "mpn": "",
    "location": "",
    "date_available": "2017-05-12",
    "weight": 0,
    "weight_class_id": 0,
    "length": 0,
    "width": 0,
    "height": 0,
    "length_class_id": 0,
    "subtract": 0,
    "minimum": 0,
    "sort_order": "",
    "product_store": [
      "0"
    ],
    "product_related": [
      "34"
    ],
    "product_filter": [
      "34"
    ],
    "product_description": [
      {
        "language_id": "1",
        "name": "demo name",
        "description": "Description of the product",
        "meta_title": "Meta title of the product",
        "meta_description": "Meta description of the product",
        "meta_keyword": "demo, keyword, demo2",
        "tag": "Product's tag, comma separeted"
      }
    ],
    "product_category": [
      "25"
    ],
    "product_special": [
      {
        "customer_group_id": "1",
        "price": "200",
        "priority": "1",
        "date_start": "2015-02-23",
        "date_end": "2019-02-23"
      }
    ],
    "product_discount": [
      {
        "name": "demo name",
        "customer_group_id": "1",
        "price": "200",
        "priority": "1",
        "quantity": "1",
        "date_start": "2015-02-23",
        "date_end": "2019-02-23"
      }
    ],
    "product_attribute": [
      {
        "attribute_id": "16",
        "product_attribute_description": [
          {
            "text": "demo name",
            "language_id": "1"
          }
        ]
      }
    ],
    "product_option": [
      {
        "type": "radio",
        "option_id": "11",
        "required": "1",
        "product_option_value": [
          {
            "price": "10.00",
            "price_prefix": "+",
            "subtract": "1",
            "points": "0",
            "points_prefix": "+",
            "weight": "0",
            "weight_prefix": "+",
            "option_value_id": "46",
            "quantity": "0"
          }
        ]
      }
    ]
  }
]</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/bulk_products</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:request></con:method></con:resource></con:interface><con:interface xsi:type="con:RestService" id="8484a018-35a7-4fd8-b3e9-8f61e225bfaf" wadlVersion="http://wadl.dev.java.net/2009/02" name="http://rest-api.upskills.in" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://rest-api.upskills.in</con:endpoint></con:endpoints><con:resource name="Page" path="/api/rest_admin/categories/extended/limit/{limit}/page/{page}" id="9785cc84-2a39-40f7-9003-89f13250474f"><con:settings/><con:parameters><con:parameter><con:name>limit</con:name><con:value>limit</con:value><con:style>TEMPLATE</con:style><con:default>limit</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter><con:parameter><con:name>page</con:name><con:value>page</con:value><con:style>TEMPLATE</con:style><con:default>page</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="Page 1" id="9f6fdace-e283-473d-ac4a-608f4ea834f1" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:page="http://rest-api.upskills.in/api/rest_admin/categories/extended/limit/limit/page/page">page:Response</con:element></con:representation><con:request name="Get Product" id="2ac96ec7-d5c6-4999-8b63-1473063ebac1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/categories/extended/limit/limit/page/page</con:originalUri><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="limit"/>
  <con:entry key="page" value="page"/>
</con:parameters><con:parameterOrder><con:entry>limit</con:entry><con:entry>page</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="9787d2f3-186e-4db5-9a46-88cea568b50d" name="REST Project"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="3787bd94-ebd3-4dd6-ad12-ee927352cbb2" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC01" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get Token" id="b3c017a8-63be-4814-bd07-05c483fe08a2"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/oauth2/token/client_credentials" methodName="Client_credentials 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Token" id="f5e6ac00-f816-48f2-9de8-42b1bb4a4653" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization " value="${#Project#Author}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials</con:originalUri><con:assertion type="GroovyScriptAssertion" id="39e9eeab-5b6c-40b0-8f12-a71d0f8f39dc" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.*
import groovy.json.JsonSlurper
import com.eviware.soapui.support.UISupport;


 
def json = new groovy.json.JsonSlurper().parseText(context.response)
 if (json.data) {
          //  log.info("Found data")
   def Access = ("Bearer").toString();
   def Token =  json.data.access_token

String AccessToken = Access + " " + Token;

  
   log.info AccessToken
  
 context.testCase.testSuite.project.setPropertyValue("AccessToken",AccessToken)
   }
 </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:tearDownScript>//Generate The CSV Report

try {
// 1. Create a "SoapUIResults" folder in the project path 
      // Retrieve the project root folder
      def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath
      // Specify a folder inside project root to store the results
      String folderPath = projectPath + "/RestAPIResults";
      // Create a File object for the specified path
      def resultFolder = new File(folderPath);
      // Check for existence of folder and create a folder
      if(!resultFolder.exists())
      {
        resultFolder.mkdirs();
      }
// 2. Create a subfolder (with timestamp) to store the request-response local copy 
      // Retrieve the latest execution date-time
      Date d = new Date();
      def executionDate = d.format("dd-MMM-yyyy HH_mm");
      // Specify the subfolder path with name Request-Response_CurrentTimeStamp
      String subfolderPath1 = folderPath+ "/Request-Response_"+executionDate;
      // Create this sub-folder
      new File(subfolderPath1).mkdirs();
/* ------------------------------------------------------------------------------- */
// 3. Create another subfolder "CSV Reports" to store the reports file 
      // Specify the subfolder path with name CSV Reports
      String subfolderPath2 = folderPath+ "/CSV Reports";
      // Create this sub-folder
      new File(subfolderPath2).mkdirs();
/* ------------------------------------------------------------------------------- */
// 4. Create a Report.csv file inside the CSV Reports folder 
      // Create a File object for Report csv file (with timestamp)
      def reportFile = new File(subfolderPath2, "Report_"+executionDate+".csv");
      // Check for existence of report file and create a file
      if(!reportFile.exists())
      {
        reportFile.createNewFile();
        // Create required column names in the report file
        reportFile.write('"Test Suite","Test Case","Test Step","Step Type","Step Status",'
                        +'"Result message","Execution Date"');
      }
/* ------------------------------------------------------------------------------- */
// 5. Inserting data in the file
      // Iterate over all the test steps results
  for(stepResult in testRunner.getResults())
  {
    // Retrieve Test Suite name
   def testSuite = testRunner.testCase.testSuite.name;
   // Retrieve Test Case name
   def testCase = testRunner.testCase.name;
   // Retrieve Test Step
   def testStep = stepResult.getTestStep();
   // Retrieve Test Step name
   def testStepName = testStep.name
   // Retrieve Test Step type
   def type = testStep.config.type
   // Retrieve Test Step status
   def status = stepResult.getStatus()
   // Creating new line in report file
   reportFile.append('\n');
   // Write all the necessary information in the file
   reportFile.append('"' + testSuite + '",');
   reportFile.append('"' + testCase + '",');
   reportFile.append('"' + testStepName + '",');
   reportFile.append('"' + type + '",');
   reportFile.append('"' + status + '",');
   // Retrieve the test result messages
   reportFile.append('"');
   for(resMessage in stepResult.getMessages())
   {
     // Write messages and separate multiple messages by new line
     reportFile.append('Message:' + resMessage + '\n');
   }
   reportFile.append('",');
   //Write executionDate in the file
   reportFile.append('"' + executionDate + '",');
/* ------------------------------------------------------------------------------- */
// 6. Extract the request and response and save it to external file
      // Verify if the test step type is request: SOAP project or restrequest: REST project
        if((type=="request").or(type=="restrequest"))
        {
          // Extract the request from the test step
          def extRequest = testStep.properties["Request"].value;    
      // Create a file in the reports folder and write the request
      // Naming convention: request_TestSuiteName_TestCaseName_TestStepName.txt
      def requestFile=subfolderPath1+"/request_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rqfile = new File(requestFile);
      rqfile.write(extRequest, "UTF-8");
      // Extract the response from the test step
      def extResponse = stepResult.getResponseContent();    
      // Create a file in the reports folder and write the response
      // Naming convention: response_TestSuiteName_TestCaseName_TestStepName.txt
      def responseFile=subfolderPath1+"/response_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rsfile = new File(responseFile);
      rsfile.write(extResponse, "UTF-8");
     }
   }
 }
catch(exc)
{
   log.error("Exception happened: " + exc.toString());
}
</con:tearDownScript><con:properties/></con:testCase><con:testCase id="f4ae6cd5-5336-4504-99cf-34e4a0d9faec" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC02" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get Token" id="74a0fd87-cb86-47c7-88be-d70323cffb70"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/oauth2/token/client_credentials" methodName="Client_credentials 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Token" id="f5e6ac00-f816-48f2-9de8-42b1bb4a4653" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization " value="${#Project#Author}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials</con:originalUri><con:assertion type="GroovyScriptAssertion" id="39e9eeab-5b6c-40b0-8f12-a71d0f8f39dc" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.*
import groovy.json.JsonSlurper
import com.eviware.soapui.support.UISupport;


 
def json = new groovy.json.JsonSlurper().parseText(context.response)
 if (json.data) {
          //  log.info("Found data")
   def Access = ("Bearer").toString();
   def Token =  json.data.access_token

String AccessToken = Access + " " + Token;

  
   log.info AccessToken
  
 context.testCase.testSuite.project.setPropertyValue("AccessToken",AccessToken)
   }
 </scriptText></con:configuration></con:assertion><con:assertion type="JsonPath Existence Match" id="4de24004-848d-4b64-b098-a278fdd8a7ea" name="JsonPath Existence Match"><con:configuration><path>data.access_token</path><content>true</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Log In" id="ddf6a4ad-1d8f-4b93-adcc-64c62eeb729d"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Log In" id="a914d3fa-1609-481a-a2ff-bf1d293378fb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
  "username": "upskills_admin",
  "password": "Talent4$$"
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/login</con:originalUri><con:assertion type="Simple Contains" id="b32fa30e-9681-4be2-8d0a-55085b54c6fc" name="Contains"><con:configuration><token>user_id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" id="c9e5fba1-3da9-4db3-b215-2335b4eddc4d" name="Script Assertion"><con:configuration><scriptText>def status = messageExchange.response.responseContent
def code = context.testCase.getTestStepByName("Log In").testRequest.response.responseHeaders["#status#"].toString();
log.info code</scriptText></con:configuration></con:assertion><con:assertion type="Invalid HTTP Status Codes" id="979ea79d-72b7-4caa-b46f-e193fd49e89d" name="Invalid HTTP Status Codes"><con:configuration><codes>400,401,402,500</codes></con:configuration></con:assertion><con:assertion type="JsonPath Match" id="cea1f2cb-4c39-40c8-8344-6cd485622e2d" name="JsonPath Match"><con:configuration><path>data[*].username</path><content>upskills_admin</content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Log Out" id="c2402dc7-1095-4d3d-a8f4-4081fcbc6833"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/logout" methodName="Logout 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Log Out" id="e17ecc30-ca7a-4804-9be7-f3af1ae7d970" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/logout</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="5068a1ad-7d2c-46bc-8ad2-0afbaa56e2ae" name="Valid HTTP Status Codes"><con:configuration><codes>200,</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:tearDownScript>//Generate The CSV Report

try {
// 1. Create a "SoapUIResults" folder in the project path 
      // Retrieve the project root folder
      def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath
      // Specify a folder inside project root to store the results
      String folderPath = projectPath + "/RestAPIResults";
      // Create a File object for the specified path
      def resultFolder = new File(folderPath);
      // Check for existence of folder and create a folder
      if(!resultFolder.exists())
      {
        resultFolder.mkdirs();
      }
// 2. Create a subfolder (with timestamp) to store the request-response local copy 
      // Retrieve the latest execution date-time
      Date d = new Date();
      def executionDate = d.format("dd-MMM-yyyy HH_mm");
      // Specify the subfolder path with name Request-Response_CurrentTimeStamp
      String subfolderPath1 = folderPath+ "/Request-Response_"+executionDate;
      // Create this sub-folder
      new File(subfolderPath1).mkdirs();
/* ------------------------------------------------------------------------------- */
// 3. Create another subfolder "CSV Reports" to store the reports file 
      // Specify the subfolder path with name CSV Reports
      String subfolderPath2 = folderPath+ "/CSV Reports";
      // Create this sub-folder
      new File(subfolderPath2).mkdirs();
/* ------------------------------------------------------------------------------- */
// 4. Create a Report.csv file inside the CSV Reports folder 
      // Create a File object for Report csv file (with timestamp)
      def reportFile = new File(subfolderPath2, "Report_"+executionDate+".csv");
      // Check for existence of report file and create a file
      if(!reportFile.exists())
      {
        reportFile.createNewFile();
        // Create required column names in the report file
        reportFile.write('"Test Suite","Test Case","Test Step","Step Type","Step Status",'
                        +'"Result message","Execution Date"');
      }
/* ------------------------------------------------------------------------------- */
// 5. Inserting data in the file
      // Iterate over all the test steps results
  for(stepResult in testRunner.getResults())
  {
    // Retrieve Test Suite name
   def testSuite = testRunner.testCase.testSuite.name;
   // Retrieve Test Case name
   def testCase = testRunner.testCase.name;
   // Retrieve Test Step
   def testStep = stepResult.getTestStep();
   // Retrieve Test Step name
   def testStepName = testStep.name
   // Retrieve Test Step type
   def type = testStep.config.type
   // Retrieve Test Step status
   def status = stepResult.getStatus()
   // Creating new line in report file
   reportFile.append('\n');
   // Write all the necessary information in the file
   reportFile.append('"' + testSuite + '",');
   reportFile.append('"' + testCase + '",');
   reportFile.append('"' + testStepName + '",');
   reportFile.append('"' + type + '",');
   reportFile.append('"' + status + '",');
   // Retrieve the test result messages
   reportFile.append('"');
   for(resMessage in stepResult.getMessages())
   {
     // Write messages and separate multiple messages by new line
     reportFile.append('Message:' + resMessage + '\n');
   }
   reportFile.append('",');
   //Write executionDate in the file
   reportFile.append('"' + executionDate + '",');
/* ------------------------------------------------------------------------------- */
// 6. Extract the request and response and save it to external file
      // Verify if the test step type is request: SOAP project or restrequest: REST project
        if((type=="request").or(type=="restrequest"))
        {
          // Extract the request from the test step
          def extRequest = testStep.properties["Request"].value;    
      // Create a file in the reports folder and write the request
      // Naming convention: request_TestSuiteName_TestCaseName_TestStepName.txt
      def requestFile=subfolderPath1+"/request_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rqfile = new File(requestFile);
      rqfile.write(extRequest, "UTF-8");
      // Extract the response from the test step
      def extResponse = stepResult.getResponseContent();    
      // Create a file in the reports folder and write the response
      // Naming convention: response_TestSuiteName_TestCaseName_TestStepName.txt
      def responseFile=subfolderPath1+"/response_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rsfile = new File(responseFile);
      rsfile.write(extResponse, "UTF-8");
     }
   }
 }
catch(exc)
{
   log.error("Exception happened: " + exc.toString());
}
</con:tearDownScript><con:properties/></con:testCase><con:testCase id="5c1d8554-eb8a-40b5-b0a6-25a5778ff143" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC18" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get Token" id="6bdb33d6-2f1b-438d-a85f-b12ca77e71a1"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/oauth2/token/client_credentials" methodName="Client_credentials 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Token" id="f5e6ac00-f816-48f2-9de8-42b1bb4a4653" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization " value="${#Project#Author}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials</con:originalUri><con:assertion type="GroovyScriptAssertion" id="39e9eeab-5b6c-40b0-8f12-a71d0f8f39dc" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.*
import groovy.json.JsonSlurper
import com.eviware.soapui.support.UISupport;


 
def json = new groovy.json.JsonSlurper().parseText(context.response)
 if (json.data) {
          //  log.info("Found data")
   def Access = ("Bearer").toString();
   def Token =  json.data.access_token

String AccessToken = Access + " " + Token;

  
   log.info AccessToken
  
 context.testCase.testSuite.project.setPropertyValue("AccessToken",AccessToken)
   }
 </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Log In" id="e07d8388-5768-4991-ade7-11ccf2970ed4"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Log In" id="a914d3fa-1609-481a-a2ff-bf1d293378fb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
  "username": "upskills_admin",
  "password": "Talent4$$"
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/login</con:originalUri><con:assertion type="Simple Contains" id="b32fa30e-9681-4be2-8d0a-55085b54c6fc" name="Contains"><con:configuration><token>user_id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="properties" name="Properties" id="c3b1ed70-2ff3-4b49-8c96-e8378d9ed525"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>id</con:name><con:value>SKU${=String.valueOf(Math.random()*100).substring(0,5)}</con:value></con:property><con:property><con:name>keyword</con:name><con:value>Samir${=String.valueOf(Math.random()*1000).substring(0,5)}</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="913aa5b5-612c-4bd7-86c7-eb8348e8a0b7"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" entitize="false" transferChildNodes="false"><con:name>KEYWORD</con:name><con:sourceType>keyword</con:sourceType><con:sourceStep>Properties</con:sourceStep><con:targetType>Request</con:targetType><con:targetStep>Add Product</con:targetStep><con:targetPath>//*:keyword
</con:targetPath><con:type>JSONPATH</con:type><con:targetTransferType>JSONPATH</con:targetTransferType><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="restrequest" name="Add Product" id="5aee3f90-119f-4048-8ba9-4ab7aa49b20b"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/products" methodName="Products 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Add Product" id="d1f22e76-72b1-44e8-911c-51d961d2c2f3" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
   "length_class_id": 0,
   "product_attribute": [   {
      "product_attribute_description": [      {
         "text": "demo name",
         "language_id": "1"
      }],
      "attribute_id": "16"
   }],
   "isbn": "",
   "other_images": [""],
   "product_store": ["0"],
   "product_option": [   {
      "product_option_value": [      {
         "quantity": "0",
         "option_value_id": "46",
         "price": "10.00",
         "subtract": "1",
         "price_prefix": "+",
         "weight": "0",
         "weight_prefix": "+",
         "points_prefix": "+",
         "points": "0"
      }],
      "option_id": "11",
      "type": "radio",
      "required": "1"
   }],
   "product_filter": ["34"],
   "points": 0,
   "ean": "",
   "shipping": "1",
   "price": "44.00",
   "jan": "",
   "product_special": [   {
      "date_start": "2015-02-23",
      "price": "200",
      "date_end": "2019-02-23",
      "priority": "1",
      "customer_group_id": "1"
   }],
   "model": "demo model",
   "stock_status_id": 0,
   "sku": "demo sku",
   "product_description": [   {
      "meta_description": "Meta description of the product",
      "meta_title": "Meta title of the product",
      "meta_keyword": "demo, keyword, demo2",
      "name": "demo name",
      "description": "Description of the product",
      "language_id": "1",
      "tag": "Product's tag, comma separeted"
   }],
   "sort_order": "",
   "height": 0,
   "reward": 0,
   "image": "",
   "manufacturer_id": "20",
   "quantity": "300",
   "product_discount": [   {
      "date_start": "2015-02-23",
      "quantity": "1",
      "price": "200",
      "name": "demo name",
      "date_end": "2019-02-23",
      "priority": "1",
      "customer_group_id": "1"
   }],
   "subtract": 0,
   "tax_class_id": "1",
   "length": 0,
   "upc": "",
   "weight": 0,
   "mpn": "",
   "product_related": ["34"],
   "width": 0,
   "product_seo_url": [   {
      "store_id": "0",
      "language_id": "1",
      "keyword": "Samir${=String.valueOf(Math.random()*1000).substring(0,5)}"
   }],
   "weight_class_id": 0,
   "location": "",
   "date_available": "2017-05-12",
   "minimum": 0,
   "product_category": ["25"],
   "status": "1"
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/products</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c78b6a14-4bf2-4599-a8d1-af1c914f0bfb" name="Script Assertion"><con:configuration><scriptText>def status = messageExchange.response.responseContent
def code = context.testCase.getTestStepByName("Add Product").testRequest.response.responseHeaders["#status#"].toString();
log.info code</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Product ID" id="de1c3178-13be-42b8-b32e-7adb70205804"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/index.php" methodName="Index.php 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Product ID" id="e1887b66-358d-47c7-a99a-e1c2ced06c7a" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/index.php</con:originalUri><con:assertion type="GroovyScriptAssertion" id="61ae2503-c211-4b34-92d8-04e2d746a57e" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.*
import groovy.json.JsonSlurper
 
def json = new groovy.json.JsonSlurper().parseText(context.response)
 if (json.data) 
 {
          
   def id=  json.id
   log.info id
  
 context.testCase.testSuite.project.setPropertyValue("id",id)
 
     
 }</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="route" value="rest/product_admin/products"/>
  <con:entry key="id" value="${#Project#id}"/>
</con:parameters><con:parameterOrder><con:entry>route</con:entry><con:entry>id</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:tearDownScript>//Generate The CSV Report

try {
// 1. Create a "SoapUIResults" folder in the project path 
      // Retrieve the project root folder
      def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath
      // Specify a folder inside project root to store the results
      String folderPath = projectPath + "/RestAPIResults";
      // Create a File object for the specified path
      def resultFolder = new File(folderPath);
      // Check for existence of folder and create a folder
      if(!resultFolder.exists())
      {
        resultFolder.mkdirs();
      }
// 2. Create a subfolder (with timestamp) to store the request-response local copy 
      // Retrieve the latest execution date-time
      Date d = new Date();
      def executionDate = d.format("dd-MMM-yyyy HH_mm");
      // Specify the subfolder path with name Request-Response_CurrentTimeStamp
      String subfolderPath1 = folderPath+ "/Request-Response_"+executionDate;
      // Create this sub-folder
      new File(subfolderPath1).mkdirs();
/* ------------------------------------------------------------------------------- */
// 3. Create another subfolder "CSV Reports" to store the reports file 
      // Specify the subfolder path with name CSV Reports
      String subfolderPath2 = folderPath+ "/CSV Reports";
      // Create this sub-folder
      new File(subfolderPath2).mkdirs();
/* ------------------------------------------------------------------------------- */
// 4. Create a Report.csv file inside the CSV Reports folder 
      // Create a File object for Report csv file (with timestamp)
      def reportFile = new File(subfolderPath2, "Report_"+executionDate+".csv");
      // Check for existence of report file and create a file
      if(!reportFile.exists())
      {
        reportFile.createNewFile();
        // Create required column names in the report file
        reportFile.write('"Test Suite","Test Case","Test Step","Step Type","Step Status",'
                        +'"Result message","Execution Date"');
      }
/* ------------------------------------------------------------------------------- */
// 5. Inserting data in the file
      // Iterate over all the test steps results
  for(stepResult in testRunner.getResults())
  {
    // Retrieve Test Suite name
   def testSuite = testRunner.testCase.testSuite.name;
   // Retrieve Test Case name
   def testCase = testRunner.testCase.name;
   // Retrieve Test Step
   def testStep = stepResult.getTestStep();
   // Retrieve Test Step name
   def testStepName = testStep.name
   // Retrieve Test Step type
   def type = testStep.config.type
   // Retrieve Test Step status
   def status = stepResult.getStatus()
   // Creating new line in report file
   reportFile.append('\n');
   // Write all the necessary information in the file
   reportFile.append('"' + testSuite + '",');
   reportFile.append('"' + testCase + '",');
   reportFile.append('"' + testStepName + '",');
   reportFile.append('"' + type + '",');
   reportFile.append('"' + status + '",');
   // Retrieve the test result messages
   reportFile.append('"');
   for(resMessage in stepResult.getMessages())
   {
     // Write messages and separate multiple messages by new line
     reportFile.append('Message:' + resMessage + '\n');
   }
   reportFile.append('",');
   //Write executionDate in the file
   reportFile.append('"' + executionDate + '",');
/* ------------------------------------------------------------------------------- */
// 6. Extract the request and response and save it to external file
      // Verify if the test step type is request: SOAP project or restrequest: REST project
        if((type=="request").or(type=="restrequest"))
        {
          // Extract the request from the test step
          def extRequest = testStep.properties["Request"].value;    
      // Create a file in the reports folder and write the request
      // Naming convention: request_TestSuiteName_TestCaseName_TestStepName.txt
      def requestFile=subfolderPath1+"/request_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rqfile = new File(requestFile);
      rqfile.write(extRequest, "UTF-8");
      // Extract the response from the test step
      def extResponse = stepResult.getResponseContent();    
      // Create a file in the reports folder and write the response
      // Naming convention: response_TestSuiteName_TestCaseName_TestStepName.txt
      def responseFile=subfolderPath1+"/response_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rsfile = new File(responseFile);
      rsfile.write(extResponse, "UTF-8");
     }
   }
 }
catch(exc)
{
   log.error("Exception happened: " + exc.toString());
}
</con:tearDownScript><con:properties/></con:testCase><con:testCase id="5cb7e4fe-20bc-4d05-b650-2ecca19cd3ba" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC19" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get Token" id="e29e13e4-f56d-4501-a862-f685a0fa3339"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/oauth2/token/client_credentials" methodName="Client_credentials 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Token" id="f5e6ac00-f816-48f2-9de8-42b1bb4a4653" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization " value="${#Project#Author}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials</con:originalUri><con:assertion type="GroovyScriptAssertion" id="39e9eeab-5b6c-40b0-8f12-a71d0f8f39dc" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.*
import groovy.json.JsonSlurper
import com.eviware.soapui.support.UISupport;


 
def json = new groovy.json.JsonSlurper().parseText(context.response)
 if (json.data) {
          //  log.info("Found data")
   def Access = ("Bearer").toString();
   def Token =  json.data.access_token

String AccessToken = Access + " " + Token;

  
   log.info AccessToken
  
 context.testCase.testSuite.project.setPropertyValue("AccessToken",AccessToken)
   }
 </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Log In" id="d3a4ad8b-8179-4de6-a27e-822042d9c30d"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Log In" id="a914d3fa-1609-481a-a2ff-bf1d293378fb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
  "username": "upskills_admin",
  "password": "Talent4$$"
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/login</con:originalUri><con:assertion type="Simple Contains" id="b32fa30e-9681-4be2-8d0a-55085b54c6fc" name="Contains"><con:configuration><token>user_id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="groovy" name="Groovy Script" id="d6637d9d-cb64-4e1c-ad58-f44e84c3363c"><con:settings/><con:config><script>import jxl.*
import groovy.json.JsonSlurper


filepath = "C:/Users/SamirVashista/Documents/API Reskill/REST_Project.xls";

File Excel = new File(filepath)

//excel contain workbooks and workbook contains sheets
Workbook wb = Workbook.getWorkbook(Excel)

//trying to fetch the sheet
Sheet sh = wb.getSheet("Sheet1")

//log.info sh.getCell(0,0).getContents()

rowSize = sh.getRows().toInteger();

columnSize = sh.getColumns().toInteger();

//log.info "The totoal number of rows which contains data are " +rowSize

//log.info "The totoal number of Column which contains data are " +columnSize

//for loop

for(def i=0;i&lt;rowSize;i++)
{
    for(def j=0;j&lt;columnSize;j++)
    {
        if(j==0)
        {
        keyword = sh.getCell(j,i).getContents()
        log.info keyword
        testRunner.testCase.getTestStepByName("Details").setPropertyValue("keyword", keyword)
        }
	   else if (j==1)
	   {
        model = sh.getCell(j,i).getContents()
        log.info model
        testRunner.testCase.getTestStepByName("Details").setPropertyValue("model", model)
        }	   
	   else if (j==2)
	   {
        quantity = sh.getCell(j,i).getContents()
        log.info quantity
        testRunner.testCase.getTestStepByName("Details").setPropertyValue("quantity", quantity)
        }
	   else if (j==3)
	   {
        price = sh.getCell(j,i).getContents()
        log.info price
        testRunner.testCase.getTestStepByName("Details").setPropertyValue("price", price)

        }
	   else if (j==4)
	   {
        name = sh.getCell(j,i).getContents()
        log.info name
        testRunner.testCase.getTestStepByName("Details").setPropertyValue("name", name)
        }
	   else if (j==5)
	   {
        title = sh.getCell(j,i).getContents()
        log.info title
        testRunner.testCase.getTestStepByName("Details").setPropertyValue("title", title)
        }
   }	
}</script></con:config></con:testStep><con:testStep type="properties" name="Details" id="0fb6f9a0-3084-4d86-924b-9848d2337cb5"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>keyword</con:name><con:value>Samir${=String.valueOf(Math.random()*1000).substring(0,5)}</con:value></con:property><con:property><con:name>model</con:name><con:value>IPhone_ 10</con:value></con:property><con:property><con:name>quantity</con:name><con:value>5</con:value></con:property><con:property><con:name>price</con:name><con:value>100000</con:value></con:property><con:property><con:name>name</con:name><con:value>IPhone  10</con:value></con:property><con:property><con:name>title</con:name><con:value>Iphone_ 10</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="restrequest" name="Multiple Product" id="1ae32714-7c42-4ca4-9136-28484603066f"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/bulk_products" methodName="Bulk_products 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Multiple Product" id="6f6b1f58-b114-42ca-b1a1-ce01ddc410a2" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>[
  {
    "model": "${Details#model}",
    "quantity": "${Details#quantity}",
    "price": "${Details#price}",
    "tax_class_id": "1",
    "manufacturer_id": "20",
    "sku": "",
    "product_seo_url": [
      {
        "keyword": "${Details#keyword}",
        "language_id": "1",
        "store_id": "0"
      }
    ],
    "status": "1",
    "points": 0,
    "reward": 0,
    "image": "",
    "other_images": [
      ""
    ],
    "shipping": "1",
    "stock_status_id": 0,
    "upc": "",
    "ean": "",
    "jan": "",
    "isbn": "",
    "mpn": "",
    "location": "",
    "date_available": "2017-05-12",
    "weight": 0,
    "weight_class_id": 0,
    "length": 0,
    "width": 0,
    "height": 0,
    "length_class_id": 0,
    "subtract": 0,
    "minimum": 0,
    "sort_order": "",
    "product_store": [
      "0"
    ],
    "product_related": [
      "34"
    ],
    "product_filter": [
      "34"
    ],
    "product_description": [
      {
        "language_id": "1",
        "name": "${Details#name}",
        "description": "Description of the product",
        "meta_title": "${Details#title}",
        "meta_description": "Meta description of the product",
        "meta_keyword": "demo, keyword, demo2",
        "tag": "Product's tag, comma separeted"
      }
    ],
    "product_category": [
      "25"
    ],
    "product_special": [
      {
        "customer_group_id": "1",
        "price": "200",
        "priority": "1",
        "date_start": "2015-02-23",
        "date_end": "2019-02-23"
      }
    ],
    "product_discount": [
      {
        "name": "demo name",
        "customer_group_id": "1",
        "price": "200",
        "priority": "1",
        "quantity": "1",
        "date_start": "2015-02-23",
        "date_end": "2019-02-23"
      }
    ],
    "product_attribute": [
      {
        "attribute_id": "16",
        "product_attribute_description": [
          {
            "text": "demo name",
            "language_id": "1"
          }
        ]
      }
    ],
    "product_option": [
      {
        "type": "radio",
        "option_id": "11",
        "required": "1",
        "product_option_value": [
          {
            "price": "10.00",
            "price_prefix": "+",
            "subtract": "1",
            "points": "0",
            "points_prefix": "+",
            "weight": "0",
            "weight_prefix": "+",
            "option_value_id": "46",
            "quantity": "0"
          }
        ]
      }
    ]
  }
]</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/bulk_products</con:originalUri><con:assertion type="GroovyScriptAssertion" id="e84f9875-b1e4-4595-afff-ea1a1052dd64" name="Script Assertion"><con:configuration><scriptText>def status = messageExchange.response.responseContent
def code = context.testCase.getTestStepByName("Multiple Product").testRequest.response.responseHeaders["#status#"].toString();
log.info code</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/><con:parameterOrder/></con:restRequest></con:config></con:testStep><con:tearDownScript>//Generate The CSV Report

try {
// 1. Create a "SoapUIResults" folder in the project path 
      // Retrieve the project root folder
      def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath
      // Specify a folder inside project root to store the results
      String folderPath = projectPath + "/RestAPIResults";
      // Create a File object for the specified path
      def resultFolder = new File(folderPath);
      // Check for existence of folder and create a folder
      if(!resultFolder.exists())
      {
        resultFolder.mkdirs();
      }
// 2. Create a subfolder (with timestamp) to store the request-response local copy 
      // Retrieve the latest execution date-time
      Date d = new Date();
      def executionDate = d.format("dd-MMM-yyyy HH_mm");
      // Specify the subfolder path with name Request-Response_CurrentTimeStamp
      String subfolderPath1 = folderPath+ "/Request-Response_"+executionDate;
      // Create this sub-folder
      new File(subfolderPath1).mkdirs();
/* ------------------------------------------------------------------------------- */
// 3. Create another subfolder "CSV Reports" to store the reports file 
      // Specify the subfolder path with name CSV Reports
      String subfolderPath2 = folderPath+ "/CSV Reports";
      // Create this sub-folder
      new File(subfolderPath2).mkdirs();
/* ------------------------------------------------------------------------------- */
// 4. Create a Report.csv file inside the CSV Reports folder 
      // Create a File object for Report csv file (with timestamp)
      def reportFile = new File(subfolderPath2, "Report_"+executionDate+".csv");
      // Check for existence of report file and create a file
      if(!reportFile.exists())
      {
        reportFile.createNewFile();
        // Create required column names in the report file
        reportFile.write('"Test Suite","Test Case","Test Step","Step Type","Step Status",'
                        +'"Result message","Execution Date"');
      }
/* ------------------------------------------------------------------------------- */
// 5. Inserting data in the file
      // Iterate over all the test steps results
  for(stepResult in testRunner.getResults())
  {
    // Retrieve Test Suite name
   def testSuite = testRunner.testCase.testSuite.name;
   // Retrieve Test Case name
   def testCase = testRunner.testCase.name;
   // Retrieve Test Step
   def testStep = stepResult.getTestStep();
   // Retrieve Test Step name
   def testStepName = testStep.name
   // Retrieve Test Step type
   def type = testStep.config.type
   // Retrieve Test Step status
   def status = stepResult.getStatus()
   // Creating new line in report file
   reportFile.append('\n');
   // Write all the necessary information in the file
   reportFile.append('"' + testSuite + '",');
   reportFile.append('"' + testCase + '",');
   reportFile.append('"' + testStepName + '",');
   reportFile.append('"' + type + '",');
   reportFile.append('"' + status + '",');
   // Retrieve the test result messages
   reportFile.append('"');
   for(resMessage in stepResult.getMessages())
   {
     // Write messages and separate multiple messages by new line
     reportFile.append('Message:' + resMessage + '\n');
   }
   reportFile.append('",');
   //Write executionDate in the file
   reportFile.append('"' + executionDate + '",');
/* ------------------------------------------------------------------------------- */
// 6. Extract the request and response and save it to external file
      // Verify if the test step type is request: SOAP project or restrequest: REST project
        if((type=="request").or(type=="restrequest"))
        {
          // Extract the request from the test step
          def extRequest = testStep.properties["Request"].value;    
      // Create a file in the reports folder and write the request
      // Naming convention: request_TestSuiteName_TestCaseName_TestStepName.txt
      def requestFile=subfolderPath1+"/request_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rqfile = new File(requestFile);
      rqfile.write(extRequest, "UTF-8");
      // Extract the response from the test step
      def extResponse = stepResult.getResponseContent();    
      // Create a file in the reports folder and write the response
      // Naming convention: response_TestSuiteName_TestCaseName_TestStepName.txt
      def responseFile=subfolderPath1+"/response_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rsfile = new File(responseFile);
      rsfile.write(extResponse, "UTF-8");
     }
   }
 }
catch(exc)
{
   log.error("Exception happened: " + exc.toString());
}
</con:tearDownScript><con:properties/></con:testCase><con:testCase id="10b03450-76c0-461e-9ee4-a7662150963d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="TC20" searchProperties="true"><con:settings/><con:testStep type="restrequest" name="Get Token" id="b0579a1a-0fd7-46da-b96d-6799efc6455e"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/oauth2/token/client_credentials" methodName="Client_credentials 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Token" id="f5e6ac00-f816-48f2-9de8-42b1bb4a4653" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization " value="${#Project#Author}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/oauth2/token/client_credentials</con:originalUri><con:assertion type="GroovyScriptAssertion" id="39e9eeab-5b6c-40b0-8f12-a71d0f8f39dc" name="Script Assertion"><con:configuration><scriptText>import com.eviware.soapui.support.XmlHolder
import com.eviware.soapui.support.*
import groovy.json.JsonSlurper
import com.eviware.soapui.support.UISupport;


 
def json = new groovy.json.JsonSlurper().parseText(context.response)
 if (json.data) {
          //  log.info("Found data")
   def Access = ("Bearer").toString();
   def Token =  json.data.access_token

String AccessToken = Access + " " + Token;

  
   log.info AccessToken
  
 context.testCase.testSuite.project.setPropertyValue("AccessToken",AccessToken)
   }
 </scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Log In" id="84fdfd99-e549-47ea-a76a-1159baff3562"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/login" methodName="Login 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Log In" id="a914d3fa-1609-481a-a2ff-bf1d293378fb" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request>{
  "username": "upskills_admin",
  "password": "Talent4$$"
}</con:request><con:originalUri>http://rest-api.upskills.in/api/rest_admin/login</con:originalUri><con:assertion type="Simple Contains" id="b32fa30e-9681-4be2-8d0a-55085b54c6fc" name="Contains"><con:configuration><token>user_id</token><ignoreCase>false</ignoreCase><useRegEx>false</useRegEx></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="Get Product" id="0c52079c-57a7-4add-bfec-aa4190ecff0a"><con:settings/><con:config service="http://rest-api.upskills.in" resourcePath="/api/rest_admin/categories/extended/limit/{limit}/page/{page}" methodName="Page 1" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="Get Product" id="2ac96ec7-d5c6-4999-8b63-1473063ebac1" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;entry key="Authorization" value="${#Project#AccessToken}" xmlns="http://eviware.com/soapui/config"/></con:setting></con:settings><con:endpoint>http://rest-api.upskills.in</con:endpoint><con:request/><con:originalUri>http://rest-api.upskills.in/api/rest_admin/categories/extended/limit/limit/page/page</con:originalUri><con:assertion type="GroovyScriptAssertion" id="c5b41b5e-7656-41c7-9505-7ebe5d11ae01" name="Script Assertion"><con:configuration><scriptText>def status = messageExchange.response.responseContent
def RC = context.testCase.getTestStepByName("Get Product").testRequest.response.responseHeaders["#status#"].toString();
log.info RC</scriptText></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="limit" value="limit"/>
  <con:entry key="page" value="page"/>
</con:parameters><con:parameterOrder><con:entry>limit</con:entry><con:entry>page</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:tearDownScript>//Generate The CSV Report

try {
// 1. Create a "SoapUIResults" folder in the project path 
      // Retrieve the project root folder
      def projectPath = new com.eviware.soapui.support.GroovyUtils(context).projectPath
      // Specify a folder inside project root to store the results
      String folderPath = projectPath + "/RestAPIResults";
      // Create a File object for the specified path
      def resultFolder = new File(folderPath);
      // Check for existence of folder and create a folder
      if(!resultFolder.exists())
      {
        resultFolder.mkdirs();
      }
// 2. Create a subfolder (with timestamp) to store the request-response local copy 
      // Retrieve the latest execution date-time
      Date d = new Date();
      def executionDate = d.format("dd-MMM-yyyy HH_mm");
      // Specify the subfolder path with name Request-Response_CurrentTimeStamp
      String subfolderPath1 = folderPath+ "/Request-Response_"+executionDate;
      // Create this sub-folder
      new File(subfolderPath1).mkdirs();
/* ------------------------------------------------------------------------------- */
// 3. Create another subfolder "CSV Reports" to store the reports file 
      // Specify the subfolder path with name CSV Reports
      String subfolderPath2 = folderPath+ "/CSV Reports";
      // Create this sub-folder
      new File(subfolderPath2).mkdirs();
/* ------------------------------------------------------------------------------- */
// 4. Create a Report.csv file inside the CSV Reports folder 
      // Create a File object for Report csv file (with timestamp)
      def reportFile = new File(subfolderPath2, "Report_"+executionDate+".csv");
      // Check for existence of report file and create a file
      if(!reportFile.exists())
      {
        reportFile.createNewFile();
        // Create required column names in the report file
        reportFile.write('"Test Suite","Test Case","Test Step","Step Type","Step Status",'
                        +'"Result message","Execution Date"');
      }
/* ------------------------------------------------------------------------------- */
// 5. Inserting data in the file
      // Iterate over all the test steps results
  for(stepResult in testRunner.getResults())
  {
    // Retrieve Test Suite name
   def testSuite = testRunner.testCase.testSuite.name;
   // Retrieve Test Case name
   def testCase = testRunner.testCase.name;
   // Retrieve Test Step
   def testStep = stepResult.getTestStep();
   // Retrieve Test Step name
   def testStepName = testStep.name
   // Retrieve Test Step type
   def type = testStep.config.type
   // Retrieve Test Step status
   def status = stepResult.getStatus()
   // Creating new line in report file
   reportFile.append('\n');
   // Write all the necessary information in the file
   reportFile.append('"' + testSuite + '",');
   reportFile.append('"' + testCase + '",');
   reportFile.append('"' + testStepName + '",');
   reportFile.append('"' + type + '",');
   reportFile.append('"' + status + '",');
   // Retrieve the test result messages
   reportFile.append('"');
   for(resMessage in stepResult.getMessages())
   {
     // Write messages and separate multiple messages by new line
     reportFile.append('Message:' + resMessage + '\n');
   }
   reportFile.append('",');
   //Write executionDate in the file
   reportFile.append('"' + executionDate + '",');
/* ------------------------------------------------------------------------------- */
// 6. Extract the request and response and save it to external file
      // Verify if the test step type is request: SOAP project or restrequest: REST project
        if((type=="request").or(type=="restrequest"))
        {
          // Extract the request from the test step
          def extRequest = testStep.properties["Request"].value;    
      // Create a file in the reports folder and write the request
      // Naming convention: request_TestSuiteName_TestCaseName_TestStepName.txt
      def requestFile=subfolderPath1+"/request_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rqfile = new File(requestFile);
      rqfile.write(extRequest, "UTF-8");
      // Extract the response from the test step
      def extResponse = stepResult.getResponseContent();    
      // Create a file in the reports folder and write the response
      // Naming convention: response_TestSuiteName_TestCaseName_TestStepName.txt
      def responseFile=subfolderPath1+"/response_"+testSuite+"_"+testCase+"_"+testStepName+".txt";
      def rsfile = new File(responseFile);
      rsfile.write(extResponse, "UTF-8");
     }
   }
 }
catch(exc)
{
   log.error("Exception happened: " + exc.toString());
}
</con:tearDownScript><con:properties/></con:testCase><con:properties/><con:setupScript>log.info("     !!!!!..........The Project Starts From Here..........!!!!!     ")</con:setupScript><con:tearDownScript>log.info("     !!!!!..........The Project Ends Here..........!!!!!     ")</con:tearDownScript></con:testSuite><con:properties><con:property><con:name>Author</con:name><con:value>Basic dXBza2lsbHNfcmVzdF9hZG1pbl9vYXV0aF9jbGllbnQ6dXBza2lsbHNfcmVzdF9hZG1pbl9vYXV0aF9zZWNyZXQ=</con:value></con:property><con:property><con:name>AccessToken</con:name><con:value>Bearer 38228aed624076f6628dad1c05087f64e668a5f6</con:value></con:property><con:property><con:name>id</con:name><con:value xsi:nil="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>